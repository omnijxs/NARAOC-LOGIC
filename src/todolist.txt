
[ ]: Streamline Taxes- and Refines- traits internalized data behaviour.

NEW FEATURES:
[ ]: OBEDIENCE: NEXT VERSION!
[ ]: BUILDINGS: NEXT VERSION!

[ ] CONFIGURATION: Use external configuration info for: BasicInfo, Race, ArmyUnitType, MagicUnitType, Perk, Building. Own proto-project.
[ ] ARMYUNIT
[ ] MAGICUNIT

NOTE: Race by itself does not do anything - only properties. So that's why it is not on the New Feature list.

IMPROVEMENTS:
[ ] Create Interface-methods to PopUnits and PopHubs to increase visibility? Problem with traits vs interface...
[ ] DATAFLOW: Access to GameData via Trait? Make a proto!
[ ] MULTIPLICATION: copy correct properties and resolve tile of the new PopUnit.
[ ] REALLOCATION: Deal with popUnit state: obedience penalties and tile calculation.
    { } Will require information about PopUnit 'owner' even though basic pop units don't have an owner.
        Anyway the workings of obedience should be planned and architectured.
[ ] A better way to map demand to cities.
[ ] Create a TestData trait for all test setup scenarios.

BUGS:
[ ] PopUnitSorter.productionSort works correctly but should not.

DESIGN:
[ ] More in-depth design of testing
    { } Logic tests -> Trait testing
    { } Implementation tests -> Class testing
    { } End-to-end tests -> Use case testing

---

[D]: TAXATION: Taxes-trait does the trick! 16.12.2015
[D]: There should be a third popUnitFinder-method: All popUnits should produce only for the preferredCity. 16.12.2015
[D]: Add testCases for popUnitsMultiply, popUnitsProduce, popHubsRefine, gameActorsSetup, feedArmies in TurnAlgorithm. 16.12.2015
[D]: Add refinesTestCases. 16.12.2015
[D]: Internalize the turnData-information to Refine-trait. 16.12.2015
[D]: Store turn specific output in PopHub - not in gameData! 15.12.2015
[D] FeedsTile & FeedsArmy - traits have slightly incorrect functionality. WHAT IS THE LEVEL TO CHECK WE DO NOT FEED NON STARVING UNITS!!! 15.12.2015
[D] Interface implementation for PopHub refining production. 10.12.2015
[D] PopUnit reallocation. Create new and remove old. 8.12.2015
[D] PopUnit multiplication. Very basic implementation. 02.12.2015
[D] A better way to deal with PopUnit priority. -> Priority ENUM!
[D] Rename FeedsCity to FeedsHub
[D] PopUnitFinder should have two different population search methods: for production and for feeding. Also no popHub parameter required. 02.12.2015
[D] Player should have an interface. 01.12.2015
[D] Produces.produce should get gameData as parameter. 30.11.2015
[D] Remove GameMap-object as an unnecessary abstraction. 30.11.2015
[D] Use productAmount value everywhere instead of hardcoded value. 30.11.2015
[D] PopUnit-class has a state which holds all relevant information such as Race, Obedience, Age etc. 20.11.2015
[D] A better way to deal with PopUnit priority. -> Priority ENUM!


CONFIGURATION:
http://mrhaki.blogspot.fi/2009/08/groovy-goodness-working-with-files.html
https://gist.github.com/keyle/723181f3a9a59a3f7652    

    static save(Object content, String filePath) {
        new File(filePath).write(new JsonBuilder(content).toPrettyString())
    }

    static Object load(String filePath) {
        return new JsonSlurper().parseText(new File(filePath).text)
    }